@page "/"

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using Empire.Models
@using Empire.Service
@using Microsoft.AspNetCore.Components.Web
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime

<div class="offcanvas offcanvas-start" tabindex="-1" id="navbarOffcanvas">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title">Empire</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="about">
                    <span class="oi oi-compass" aria-hidden="true"></span> About
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="contact">
                    <span class="oi oi-envelope-open" aria-hidden="true"></span> Contact
                </NavLink>
            </div>
            @if (IsAuthenticated)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Users">
                        <span class="oi oi-person" aria-hidden="true"></span> Users
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Tickets">
                        <span class="oi oi-laptop" aria-hidden="true"></span> Project Tasks
                    </NavLink>
                </div>
            }
        </nav>
    </div>
</div>

<button title="Navigation menu" class="navbar-toggler" data-bs-toggle="offcanvas" data-bs-target="#navbarOffcanvas">
    <span class="navbar-toggler-icon"></span>
</button>

@code {
    private bool IsAuthenticated { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadAuthenticationState();
    }

    private async Task LoadAuthenticationState()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        IsAuthenticated = authState.User.Identity.IsAuthenticated;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializeBootstrap");
        }
    }
}
