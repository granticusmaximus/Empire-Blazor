@page "/task/details/{MsrID:int}"
@using Empire.Models
@using Empire.Service
@inject MSRService MSRTaskService
@inject NavigationManager navi

<h3>MSR Task Details</h3>

@if (msrTask == null)
{
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}
else
{
    <dl class="row">
        <dt class="col-sm-3">Task ID:</dt>
        <dd class="col-sm-9">@msrTask.MsrID</dd>

        <dt class="col-sm-3">Title:</dt>
        <dd class="col-sm-9">@msrTask.MSRtitle</dd>

        <dt class="col-sm-3">Assigned User:</dt>
        <dd class="col-sm-9">@msrTask.AppUser.UserName</dd>

        <dt class="col-sm-3">Assigned App:</dt>
        <dd class="col-sm-9">@msrTask.Apps.AppName</dd> 

        <dt class="col-sm-3">Date Added:</dt>
        <dd class="col-sm-9">@msrTask.DateAdded.ToString("MM/dd/yyyy")</dd>

        <dt class="col-sm-3">Notes:</dt>
        <dd class="col-sm-9">@msrTask.MSRNote</dd>
    </dl>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">
            @errorMessage
        </div>
    }

    <button class="btn btn-primary" @onclick="EditTask">Edit</button>
    <button class="btn btn-secondary" @onclick="BackToList">Back to List</button>
}

@code {
    [Parameter]
    public int MsrID { get; set; }
    private string errorMessage;
    private MSRTask msrTask;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            msrTask = await MSRTaskService.GetMSRTaskByIdAsync(MsrID);
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }

    private void EditTask()
    {
        if (msrTask != null)
        {
            navi.NavigateTo($"/task/edit/{msrTask.MsrID}");
        }
        else
        {
            errorMessage = "Task details for editing are not available. Please try reloading the page or return to the task list.";
        }
    }

    private void BackToList()
    {
        navi.NavigateTo("/tasks");
    }
}
