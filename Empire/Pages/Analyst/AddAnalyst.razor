@page "/analyst/add"
@page "/analyst/edit/{BAID:int}"
@using Empire.Models
@inject HttpClient LocalApiClient
@inject NavigationManager NavigationManager
<h1>@Title User</h1>
<hr />
<EditForm Model="@analyst" OnValidSubmit="SaveAnalyst">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">First Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="analyst.BAFName" />
        </div>
        <ValidationMessage For="@(() => analyst.BAFName)" />
    </div>
    <div class="mb-3">
        <label for="Name" class="form-label">Last Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="analyst.BALName" />
        </div>
        <ValidationMessage For="@(() => analyst.BALName)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">Email</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="analyst.Email" />
        </div>
        <ValidationMessage For="@(() => analyst.Email)" />
    </div>
    <div class="mb-3">
        <label for="Cellnumber" class="form-label">Cell No</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="analyst.Phone" />
        </div>
        <ValidationMessage For="@(() => analyst.Phone)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int baID { get; set; }
    protected string Title = "Add";
    protected Analyst analyst = new();
    protected override async Task OnParametersSetAsync()
    {
        if (baID != 0)
        {
            Title = "Edit";
            analyst = await LocalApiClient.GetFromJsonAsync<Analyst>("api/Analyst/" + baID);
        }
    }
    protected async Task SaveAnalyst()
    {
        if (analyst.BAID != 0)
        {
            await LocalApiClient.PutAsJsonAsync("api/Analyst", analyst);
        }
        else
        {
            await LocalApiClient.PostAsJsonAsync("api/Analyst", analyst);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchanalystdetails");
    }
}