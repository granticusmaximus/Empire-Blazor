@page "/AddEmployee"
@using Empire.Data
@using Empire.Models
@using Empire.Service
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext context
@inject EmployeeService employeeService
@inject NavigationManager NavigationManager

<h2>Add Employee</h2>
<hr />

<form>
    <div class="row">
        <div class="col-md-8">
            <!-- ... other form elements ... -->

            <div class="form-group">
                <label for="Role" class="control-label">Role</label>
                <select @bind="selectedRoleId" class="form-control">
                    @foreach (var role in roles)
                    {
                        <option value="@role.Id">@role.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="Gender" class="control-label">Gender</label>
                <input type="text" form="Gender" class="form-control" @bind="@obj.Gender" />
            </div>
            <div class="form-group">
                <label for="City" class="control-label">City</label>
                <input type="text" form="City" class="form-control" @bind="@obj.City" />
            </div>
            <div class="form-group">
                <label for="Designation" class="control-label">Designation</label>
                <input type="text" form="Designation" class="form-control" @bind="@obj.Designation" />
            </div>
            <div class="form-group">
                <label for="Email" class="control-label">Email</label>
                <input type="email" form="Email" class="form-control" @bind="@obj.Email" />
            </div>

        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateEmployee" value="Save" />
                <input type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    Employee obj = new Employee();
    List<Role> roles = new List<Role>();
    int selectedRoleId;

    protected override async Task OnInitializedAsync()
    {
        roles = await context.Roles.ToListAsync();
        if (!roles.Any())
        {
            roles = new List<Role>();
        }
        else
        {
            selectedRoleId = obj?.RoleId ?? roles.First().Id;
        }
    }

    protected async void CreateEmployee()
    {
        await employeeService.InsertEmployeeAsync(obj, selectedRoleId);
        NavigationManager.NavigateTo("Employees");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("Employees");
    }
}
